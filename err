warning: unused imports: `Color`, `Modifier`, `Span`, `Spans`, `Style`
  --> src/main.rs:15:13
   |
15 |     style::{Color, Modifier, Style},
   |             ^^^^^  ^^^^^^^^  ^^^^^
16 |     text::{Span, Spans, Text},
   |            ^^^^  ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `events`
  --> src/main.rs:41:13
   |
41 |         let mut events = Events::new();
   |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `e`
   --> src/main.rs:156:17
    |
156 |             Err(e) => return Err(Error::new(ErrorKind::Other, "oh no!")),
    |                 ^ help: if this is intentional, prefix it with an underscore: `_e`

warning: unused variable: `chat_vec`
   --> src/main.rs:175:21
    |
175 | fn update_chat_list(chat_vec: &Vec<Chat>) {}
    |                     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chat_vec`

warning: variable does not need to be mutable
  --> src/main.rs:41:13
   |
41 |         let mut events = Events::new();
   |             ----^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/main.rs:122:9
    |
122 |     let mut events = Events::new();
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`

warning: field is never read: `input_handle`
  --> src/event.rs:22:5
   |
22 |     input_handle: thread::JoinHandle<()>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field is never read: `ignore_exit_key`
  --> src/event.rs:23:5
   |
23 |     ignore_exit_key: Arc<AtomicBool>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `tick_handle`
  --> src/event.rs:24:5
   |
24 |     tick_handle: thread::JoinHandle<()>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function is never used: `disable_exit_key`
  --> src/event.rs:88:12
   |
88 |     pub fn disable_exit_key(&mut self) {
   |            ^^^^^^^^^^^^^^^^

warning: associated function is never used: `enable_exit_key`
  --> src/event.rs:92:12
   |
92 |     pub fn enable_exit_key(&mut self) {
   |            ^^^^^^^^^^^^^^^

warning: function is never used: `draw_tui`
   --> src/main.rs:177:4
    |
177 | fn draw_tui(terminal: &mut Terminal<TermionBackend<RawTerminal<Stdout>>>) -> io::Result<()> {
    |    ^^^^^^^^

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:9
    |
125 | /         terminal.draw(|f| {
126 | |             let size = f.size();
127 | |
128 | |             let chunks = Layout::default()
...   |
152 | |             f.render_widget(input, chunks[1]);
153 | |         });
    | |___________^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:178:5
    |
178 |     terminal.clear();
    |     ^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: 14 warnings emitted

    Finished dev [unoptimized + debuginfo] target(s) in 0.04s
     Running `target/debug/tele`
[1;36m[ 3][t 3][1610037594.429100036][Td.cpp:4588][#1][!Td][&td_requests]	Sending update: updateOption {
  name = "version"
  value = optionValueString {
    value = "1.7.0"
  }
}[0m
[1;36m[ 3][t 3][1610037594.429175138][Td.cpp:4588][#1][!Td][&td_requests]	Sending update: updateAuthorizationState {
  authorization_state = authorizationStateWaitTdlibParameters {
  }
}[0m
[1;36m[ 3][t 3][1610037594.429330110][Td.cpp:3449][#1][!Td][&td_requests]	Receive request 1: setLogVerbosityLevel {
  new_verbosity_level = 0
}[0m
